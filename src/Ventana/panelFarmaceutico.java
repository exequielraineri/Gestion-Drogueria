/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventana;

import Conexion.Conexion;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import sistema_drogueria.Home;
import static sistema_drogueria.Home.con;

/**
 *
 * @author ADMIN
 */
public class panelFarmaceutico extends javax.swing.JPanel {

    PreparedStatement pstm;
    ResultSet rs;
    DefaultTableModel model;

    /**
     * Creates new form panelFarmacia
     */
    public panelFarmaceutico() {
        initComponents();
        setVisible(true);
        con = new Conexion();
        mostrarTabla(tableFarmaceutico);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        txtDni = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        txtDomicilio = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        btnAgregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableFarmaceutico = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        btnEliminar2 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(800, 600));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("Nombre Farmaceutico");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 195, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("Dni");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 237, -1));

        txtNombre.setBorder(null);
        txtNombre.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtNombre.setOpaque(false);
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 93, 241, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 241, 10));

        txtDni.setBorder(null);
        txtDni.setOpaque(false);
        jPanel1.add(txtDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 240, -1));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, 640, 10));

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel3.setText("Domicilio");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(458, 62, 237, -1));

        txtDomicilio.setBorder(null);
        txtDomicilio.setOpaque(false);
        jPanel1.add(txtDomicilio, new org.netbeans.lib.awtextra.AbsoluteConstraints(458, 86, 237, -1));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(458, 106, 237, 10));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 180, 237, 40));

        tableFarmaceutico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Dni", "Domicilio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableFarmaceutico.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableFarmaceutico);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 635, 190));

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Agregando Farmaceutico");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 26, 635, -1));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 113, 241, 10));

        btnEliminar2.setText("Eliminar");
        btnEliminar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar2ActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 480, 240, 40));

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (!verificarCampos()) {
            try {

                //con = new Conexion();
                pstm = con.getConnection().prepareStatement("INSERT INTO farmaceutico(farmtico_nombre,farmtico_dni,farmtico_domicilio,farmtico_estado) values(?,?,?,?)");
                pstm.setString(1, txtNombre.getText());
                pstm.setInt(2, Integer.parseInt(txtDni.getText()));
                pstm.setString(3, txtDomicilio.getText());
                pstm.setBoolean(4, true);
                pstm.executeUpdate();
                JOptionPane.showMessageDialog(null, "Se agrego un nuevo farmaceutico");
                txtDomicilio.setText(null);
                txtNombre.setText(null);
                txtDni.setText(null);

                mostrarTabla(tableFarmaceutico);

            } catch (SQLException ex) {
                Logger.getLogger(panelFarmaceutico.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    //con.desconectar();
                    pstm.close();
                    rs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);

                }

            }
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar2ActionPerformed
        // TODO add your handling code here:
        //con=new Conexion();
        String eliminar = "update farmaceutico set farmtico_estado=false where farmtico_nombre=? and farmtico_dni=?";
        if (tableFarmaceutico.getSelectedRow() != -1) {
            try {
                model = (DefaultTableModel) tableFarmaceutico.getModel();
                pstm = con.getConnection().prepareStatement(eliminar);
                pstm.setString(1, String.valueOf(model.getValueAt(tableFarmaceutico.getSelectedRow(), 0)));
                pstm.setInt(2, (int) model.getValueAt(tableFarmaceutico.getSelectedRow(), 1));
                pstm.executeUpdate();
                mostrarTabla(tableFarmaceutico);
            } catch (SQLException ex) {
                Logger.getLogger(panelMed.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un farmaceutico");
        }
    }//GEN-LAST:event_btnEliminar2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable tableFarmaceutico;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtDomicilio;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    private void mostrarTabla(JTable tabla) {
        try {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            //con = new Conexion();
            borrarTabla(tabla);
            model = (DefaultTableModel) tabla.getModel();

            pstm = con.getConnection().prepareStatement("select * from farmaceutico where farmtico_estado=true");
            rs = pstm.executeQuery();
            Object[] fila = new Object[3];
            while (rs.next()) {
                fila[0] = rs.getString("farmtico_nombre");
                fila[1] = rs.getInt("farmtico_dni");
                fila[2] = rs.getString("farmtico_domicilio");
                model.addRow(fila);
            }
            tabla.setModel(model);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        } finally {
            try {
                //con.desconectar();
                pstm.close();
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);

            }

        }

    }

    public void borrarTabla(JTable tabla) {

        model = (DefaultTableModel) tabla.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

    }

    private boolean verificarCampos() {
        boolean vacio = false;
        StringBuilder camposVacios = new StringBuilder();
        int i = 0;
        camposVacios.append("\tError/es:\n");
        if (txtDomicilio.getText().isEmpty()) {
            vacio = true;
            i++;
            camposVacios.append(i + "- Debe ingresar Domicilio.\n");
        }
        if (txtNombre.getText().isEmpty()) {
            vacio = true;
            i++;
            camposVacios.append(i + "- Debe ingresar Nombre.\n");
        }

        if (txtDni.getText().isEmpty()) {
            vacio = true;
            i++;
            camposVacios.append(i + "- Debe ingresar Dni.\n");
        }

        if (vacio) {
            JOptionPane.showMessageDialog(null, camposVacios);
        }
        return vacio;
    }

}
